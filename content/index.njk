---js
const eleventyNavigation = {
	key: "Home",
	order: 1
};

const numberOfLatestPostsToShow = 3;
---
<div class="intro"><h2><span class="red">
<script>
currentTime=new Date();
//getHour() function will retrieve the hour from current time
if(currentTime.getHours()<13)
document.write("Good morning! ");
else if(currentTime.getHours()<17)
document.write("Good afternoon! ");
else if(currentTime.getHours()<20)
document.write("Good evening! ");
else if(currentTime.getHours()<6)
document.write("Good night! ");
else 
document.write("Good night! ");
var weekday = new Array(7)
weekday[0] = " Sunday"
weekday[1] = " Monday"
weekday[2] = " Tuesday"
weekday[3] = " Wednesday"
weekday[4] = " Thursday"
weekday[5] = " Friday"
weekday[6] = " Saturday"
var currentDate = new Date()
weekdayValue = currentDate.getDay()
document.write(
 "</span>I'm Carlos, this is my home on the Internet. I hope you're having a great " + weekday[weekdayValue] + ".</h2>"
)
</script></div>

<hr class="middle">

<div id="filters" class="button-group filters-button-group">  
<button class="button is-checked" data-filter="*">All</button>
{% for tag in collections | getKeys | filterTagList %}
{% set tagUrl %}/tag/{{ tag | slugify }}/{% endset %}
<button class="button" data-filter=".{{tag}}">{{ tag }}</button>
{% endfor %}
</div>

<ul class="posts">
{% set postslist = collections.posts %}
{%- for post in postslist | reverse %}
<li class="postlist-item {{post.data.category}}" data-filter="{{post.data.category}}">
<a href="{{ post.url }}"> 
<h5>{{ post.data.title }}</h5>
<p class="excerpt">{{post.data.excerpt}}</p>


</a>
{%- endfor %}
</ul>

<script>


    
// init Isotope
var iso = new Isotope( '.posts', {
  itemSelector: '.postlist-item',
  layoutMode: 'fitRows'
});

// filter functions
var filterFns = {
  // show if number is greater than 50
  numberGreaterThan50: function( itemElem ) {
    var number = itemElem.querySelector('.number').textContent;
    return parseInt( number, 10 ) > 50;
  },
  // show if name ends with -ium
  ium: function( itemElem ) {
    var name = itemElem.querySelector('.name').textContent;
    return name.match( /ium$/ );
  }
};

// bind filter button click
var filtersElem = document.querySelector('.filters-button-group');
filtersElem.addEventListener( 'click', function( event ) {
  // only work with buttons
  if ( !matchesSelector( event.target, 'button' ) ) {
    return;
  }
  var filterValue = event.target.getAttribute('data-filter');
  // use matching filter function
  filterValue = filterFns[ filterValue ] || filterValue;
  iso.arrange({ filter: filterValue });
});

// change is-checked class on buttons
var buttonGroups = document.querySelectorAll('.button-group');
for ( var i=0, len = buttonGroups.length; i < len; i++ ) {
  var buttonGroup = buttonGroups[i];
  radioButtonGroup( buttonGroup );
}

function radioButtonGroup( buttonGroup ) {
  buttonGroup.addEventListener( 'click', function( event ) {
    // only work with buttons
    if ( !matchesSelector( event.target, 'button' ) ) {
      return;
    }
    buttonGroup.querySelector('.is-checked').classList.remove('is-checked');
    event.target.classList.add('is-checked');
  });
}

  
</script>


<hr class="middle">

< div class="nav-pages">
<a href="/about">About<span class="description">Who I am</span></a>
<a href="/blog">Blog<span class="description">Thoughts, ideas, concepts...</span></a>
<a href="/tag/projects">Projects<span class="description">What I've done.</span></a>
<a href="/info/#contact">Contact<span class="description">How to get in touch.</span></a>
<a href="/colophon">Colophon<span class="description">How this website is made.</span></a>
<a href="/blogroll">Blogroll<span class="description">Blogs and websites I visit frequently.</span></a>
<a href="/work">Work<span class="description">What I've done.</span></a>
<a href="/now">Now<span class="description">What I'm doing.</span></a>
<a href="/uses">Uses<span class="description">What I use.</span></a>
<a href="/feed">Feed<span class="description">How to subscribe.</span></a>
</div>